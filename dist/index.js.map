{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AACA,2GAA2G;AAC3G,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEzB;;;;;;;GAOG;AACH,SAAgB,aAAa,CAAC,IAAY,EAAE,SAAmB;IAE3D,IAAI,SAAS,KAAK,SAAS,IAAI,CAAC,SAAS;QACrC,OAAO,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IAE3C,OAAO,eAAe,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAE5D,CAAC;AAPD,sCAOC;AAED;;;;;GAKG;AACH,SAAgB,eAAe,CAAC,SAAiB;IAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;AACxC,CAAC;AAFD,0CAEC;AAED;;;;;GAKG;AACH,SAAgB,eAAe,CAAC,SAAiB;IAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;AACxC,CAAC;AAFD,0CAEC;AAID;;;;;;GAMG;AACH,SAAgB,UAAU,CAAC,MAAc,EAAE,IAAW;IAElD,IAAI,IAAI,KAAK,SAAS,EAAE;QAEpB,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;QAEnB,aAAa;QACb,MAAM,GAAG,GAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;QACjC,MAAM,GAAG,GAAW,CAAC,CAAC,UAAU,EAAE,CAAC;QACnC,MAAM,GAAG,GAAW,CAAC,CAAC,UAAU,EAAE,CAAC;QAEnC,MAAM,MAAM,GAAW,CAAC,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,IAAI,GAAW,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACtC,MAAM,IAAI,GAAW,CAAC,CAAC,OAAO,EAAE,CAAC;QAGjC,kBAAkB;QAClB,MAAM,CAAC,GAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC1E,MAAM,CAAC,GAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC1E,MAAM,CAAC,GAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE1E,MAAM,IAAI,GAAW,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACzF,MAAM,EAAE,GAAW,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC/E,MAAM,EAAE,GAAW,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAG/E,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KAC3H;IAGD,MAAM,GAAG,GAAG,IAAK,CAAC,QAAQ,EAAE,CAAC;IAC7B,MAAM,GAAG,GAAG,IAAK,CAAC,UAAU,EAAE,CAAC;IAC/B,MAAM,GAAG,GAAG,IAAK,CAAC,UAAU,EAAE,CAAC;IAE/B,MAAM,MAAM,GAAG,IAAK,CAAC,WAAW,EAAE,CAAC;IACnC,MAAM,IAAI,GAAG,IAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,IAAK,CAAC,OAAO,EAAE,CAAC;IAG7B,kBAAkB;IAClB,MAAM,CAAC,GAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC1E,MAAM,CAAC,GAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC1E,MAAM,CAAC,GAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAE1E,MAAM,IAAI,GAAW,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzF,MAAM,EAAE,GAAW,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC/E,MAAM,EAAE,GAAW,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAG/E,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC7H,CAAC;AAlDD,gCAkDC","sourcesContent":["\r\n//const Month: any[] = ['Jan', 'Fev', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Out', 'Nov', 'Dez']\r\nconst ms = require(\"ms\");\r\n\r\n/**\r\n *\r\n * @param {number} time\r\n * @param {boolean} inSeconds\r\n * @copyright This function uses MS library, all library credit goes to Vercel\r\n * @description - Adds a time to the current timestamp. example: AddTimeToDate('1d') returns in milliseconds - s, m, h, d,\r\n * @returns { number } return number\r\n */\r\nexport function AddTimeToDate(time: number, inSeconds?: boolean): number {\r\n\r\n    if (inSeconds === undefined || !inSeconds)\r\n        return new Date().getTime() + ms(time);\r\n\r\n    return MillisToSeconds(new Date().getTime() + ms(time));\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} timestamp\r\n * @description - Convert timestamp time from milliseconds to seconds\r\n * @returns {number}\r\n */\r\nexport function MillisToSeconds(timestamp: number): number {\r\n    return Math.floor(timestamp / 1000);\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} timestamp\r\n * @description - Convert timestamp time from seconds to milliseconds\r\n * @returns {number}\r\n */\r\nexport function SecondsToMillis(timestamp: number): number {\r\n    return Math.floor(timestamp * 1000);\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param {string} format\r\n * @param {Date} date\r\n * @description - Do a date formatting to string - FormatDate('you are in the day mm/dd/yyyy') or FormatDate('you are in the day mm/dd/yyyy', new Date(2266150973543))\r\n * @returns {number}\r\n */\r\nexport function FormatDate(format: string, date?: Date): string {\r\n\r\n    if (date === undefined) {\r\n\r\n        var d = new Date();\r\n\r\n        //Give Values\r\n        const h_0: number = d.getHours();\r\n        const m_0: number = d.getMinutes();\r\n        const s_0: number = d.getSeconds();\r\n\r\n        const yyyy_0: number = d.getFullYear();\r\n        const mm_0: number = d.getMonth() + 1;\r\n        const dd_0: number = d.getDate();\r\n\r\n\r\n        //Format in String\r\n        const h: string = h_0 <= 9 ? h_0 <= 0 ? \"00\" : `0${h_0}` : h_0.toString();\r\n        const m: string = m_0 <= 9 ? m_0 <= 0 ? \"00\" : `0${m_0}` : m_0.toString();\r\n        const s: string = s_0 <= 9 ? s_0 <= 0 ? \"00\" : `0${s_0}` : s_0.toString();\r\n\r\n        const yyyy: string = yyyy_0 <= 9 ? yyyy_0 <= 0 ? \"00\" : `0${yyyy_0}` : yyyy_0.toString();\r\n        const mm: string = mm_0 <= 9 ? mm_0 <= 0 ? \"00\" : `0${mm_0}` : mm_0.toString();\r\n        const dd: string = dd_0 <= 9 ? dd_0 <= 0 ? \"00\" : `0${dd_0}` : dd_0.toString();\r\n\r\n\r\n        return format.replace('h', h).replace('m', m).replace('s', s).replace('yyyy', yyyy).replace('mm', mm).replace('dd', dd);\r\n    }\r\n\r\n\r\n    const h_1 = date!.getHours();\r\n    const m_1 = date!.getMinutes();\r\n    const s_1 = date!.getSeconds();\r\n\r\n    const yyyy_1 = date!.getFullYear();\r\n    const mm_1 = date!.getMonth() + 1;\r\n    const dd_1 = date!.getDate();\r\n\r\n\r\n    //Format in String\r\n    const h: string = h_1 <= 9 ? h_1 <= 0 ? \"00\" : `0${h_1}` : h_1.toString();\r\n    const m: string = m_1 <= 9 ? m_1 <= 0 ? \"00\" : `0${m_1}` : m_1.toString();\r\n    const s: string = s_1 <= 9 ? s_1 <= 0 ? \"00\" : `0${s_1}` : s_1.toString();\r\n\r\n    const yyyy: string = yyyy_1 <= 9 ? yyyy_1 <= 0 ? \"00\" : `0${yyyy_1}` : yyyy_1.toString();\r\n    const mm: string = mm_1 <= 9 ? mm_1 <= 0 ? \"00\" : `0${mm_1}` : mm_1.toString();\r\n    const dd: string = dd_1 <= 9 ? dd_1 <= 0 ? \"00\" : `0${dd_1}` : dd_1.toString();\r\n\r\n\r\n    return format.replace('h', h).replace('m', m).replace('ss', s).replace('yyyy', yyyy).replace('mm', mm).replace('dd', dd);\r\n}\r\n"]}